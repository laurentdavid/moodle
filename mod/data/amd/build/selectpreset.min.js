define("mod_data/selectpreset",["exports","./applypresets","core/ajax","core/notification"],(function(_exports,_applypresets,_ajax,_notification){var obj;
/**
   * Javascript module to control the form responsible for selecting a preset.
   *
   * @module      mod_data/selectpreset
   * @copyright   2021 Mihail Geshoski <mihail@moodle.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.initUsePresetPopupDialog=_exports.init=void 0,_notification=(obj=_notification)&&obj.__esModule?obj:{default:obj};const selectors_presetRadioButton='input[name="fullname"]',selectors_selectPresetButton='input[name="selectpreset"]',selectors_selectedPresetRadioButton='input[name="fullname"]:checked';_exports.init=()=>{const radioButton=document.querySelectorAll(selectors_presetRadioButton);disableUsePresetButton(),initUsePresetPopupDialog(),radioButton.forEach((elem=>{elem.addEventListener("change",(function(event){event.preventDefault(),disableUsePresetButton()}))}))};const disableUsePresetButton=()=>{let selectPresetButton=document.querySelector(selectors_selectPresetButton);document.querySelectorAll(selectors_selectedPresetRadioButton).length>0?(selectPresetButton.removeAttribute("disabled"),selectPresetButton.classList.remove("btn-secondary"),selectPresetButton.classList.add("btn-primary")):(selectPresetButton.setAttribute("disabled",!0),selectPresetButton.classList.remove("btn-primary"),selectPresetButton.classList.add("btn-secondary"))},initUsePresetPopupDialog=()=>{const selectPresetButton=document.querySelector(selectors_selectPresetButton);selectPresetButton.addEventListener("click",(event=>{let args={cmid:selectPresetButton.dataset.cmid},presetLabel="";if(selectPresetButton.dataset.presetName)args.presetname=selectPresetButton.dataset.presetName,presetLabel=selectPresetButton.dataset.presetLabel;else{const selectedRadioButton=document.querySelector(selectors_selectedPresetRadioButton);args.presetname=selectedRadioButton.value,selectedRadioButton.labels.length>0&&(presetLabel=selectedRadioButton.labels[0].textContent)}event.preventDefault(),(0,_ajax.call)([{methodname:"mod_data_apply_preset_parameters",args:args}])[0].then((result=>{let details=JSON.parse(result.details);return details.needsMapping?(details.presetLabel=presetLabel,(0,_applypresets.showApplyPresetsDialog)(details)):window.location.assign(details.url),!0})).catch(_notification.default.exception)}))};_exports.initUsePresetPopupDialog=initUsePresetPopupDialog}));

//# sourceMappingURL=selectpreset.min.js.map