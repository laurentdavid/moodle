{"version":3,"file":"message_drawer.min.js","sources":["../src/message_drawer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the message drawer.\n *\n * @module     core_message/message_drawer\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(\n[\n    'jquery',\n    'core/custom_interaction_events',\n    'core/pubsub',\n    'core_message/message_drawer_view_contact',\n    'core_message/message_drawer_view_contacts',\n    'core_message/message_drawer_view_conversation',\n    'core_message/message_drawer_view_group_info',\n    'core_message/message_drawer_view_overview',\n    'core_message/message_drawer_view_search',\n    'core_message/message_drawer_view_settings',\n    'core_message/message_drawer_router',\n    'core_message/message_drawer_routes',\n    'core_message/message_drawer_events',\n    'core_message/message_drawer_helper',\n    'core/pending',\n    'core/drawer',\n    'core/local/aria/focuslock',\n    'core/modal_backdrop',\n    'core/templates'\n],\nfunction(\n    $,\n    CustomEvents,\n    PubSub,\n    ViewContact,\n    ViewContacts,\n    ViewConversation,\n    ViewGroupInfo,\n    ViewOverview,\n    ViewSearch,\n    ViewSettings,\n    Router,\n    Routes,\n    Events,\n    Helper,\n    Pending,\n    Drawer,\n    FocusLock,\n    ModalBackdrop,\n    Templates\n) {\n\n    var SELECTORS = {\n        DRAWER: '[data-region=\"right-hand-drawer\"]',\n        PANEL_BODY_CONTAINER: '[data-region=\"panel-body-container\"]',\n        PANEL_HEADER_CONTAINER: '[data-region=\"panel-header-container\"]',\n        VIEW_CONTACT: '[data-region=\"view-contact\"]',\n        VIEW_CONTACTS: '[data-region=\"view-contacts\"]',\n        VIEW_CONVERSATION: '[data-region=\"view-conversation\"]',\n        VIEW_GROUP_INFO: '[data-region=\"view-group-info\"]',\n        VIEW_OVERVIEW: '[data-region=\"view-overview\"]',\n        VIEW_SEARCH: '[data-region=\"view-search\"]',\n        VIEW_SETTINGS: '[data-region=\"view-settings\"]',\n        ROUTES: '[data-route]',\n        ROUTES_BACK: '[data-route-back]',\n        HEADER_CONTAINER: '[data-region=\"header-container\"]',\n        BODY_CONTAINER: '[data-region=\"body-container\"]',\n        FOOTER_CONTAINER: '[data-region=\"footer-container\"]',\n        CLOSE_BUTTON: '[data-action=\"closedrawer\"]'\n    };\n\n    /**\n     * Get elements for route.\n     *\n     * @param {String} namespace Unique identifier for the Routes\n     * @param {Object} root The message drawer container.\n     * @param {string} selector The route container.\n     *\n     * @return {array} elements Found route container objects.\n     */\n    var getParametersForRoute = function(namespace, root, selector) {\n\n        var header = root.find(SELECTORS.HEADER_CONTAINER).find(selector);\n        if (!header.length) {\n            header = root.find(SELECTORS.PANEL_HEADER_CONTAINER).find(selector);\n        }\n        var body = root.find(SELECTORS.BODY_CONTAINER).find(selector);\n        if (!body.length) {\n            body = root.find(SELECTORS.PANEL_BODY_CONTAINER).find(selector);\n        }\n        var footer = root.find(SELECTORS.FOOTER_CONTAINER).find(selector);\n\n        return [\n            namespace,\n            header.length ? header : null,\n            body.length ? body : null,\n            footer.length ? footer : null\n        ];\n    };\n\n    var routes = [\n        [Routes.VIEW_CONTACT, SELECTORS.VIEW_CONTACT, ViewContact.show, ViewContact.description],\n        [Routes.VIEW_CONTACTS, SELECTORS.VIEW_CONTACTS, ViewContacts.show, ViewContacts.description],\n        [Routes.VIEW_CONVERSATION, SELECTORS.VIEW_CONVERSATION, ViewConversation.show, ViewConversation.description],\n        [Routes.VIEW_GROUP_INFO, SELECTORS.VIEW_GROUP_INFO, ViewGroupInfo.show, ViewGroupInfo.description],\n        [Routes.VIEW_OVERVIEW, SELECTORS.VIEW_OVERVIEW, ViewOverview.show, ViewOverview.description],\n        [Routes.VIEW_SEARCH, SELECTORS.VIEW_SEARCH, ViewSearch.show, ViewSearch.description],\n        [Routes.VIEW_SETTINGS, SELECTORS.VIEW_SETTINGS, ViewSettings.show, ViewSettings.description]\n    ];\n\n    /**\n     * Create routes.\n     *\n     * @param {String} namespace Unique identifier for the Routes\n     * @param {Object} root The message drawer container.\n     */\n    var createRoutes = function(namespace, root) {\n        routes.forEach(function(route) {\n            Router.add(namespace, route[0], getParametersForRoute(namespace, root, route[1]), route[2], route[3]);\n        });\n    };\n\n    // The open button is the button that opened the drawer. The element is send\n    // using the pubsub event so we need to store when the user clicks the button.\n    let openButton = null;\n\n    let backdropPromise = null;\n\n    /**\n     * Set the focus on the drawer.\n     *\n     * This method also creates or destroy any necessary backdrop zone and focus trap.\n     *\n     * @param {Object} root The message drawer container.\n     * @param {Boolean} hasFocus Whether the drawer has focus or not.\n     */\n    var setFocus = function(root, hasFocus) {\n        var drawerRoot = Drawer.getDrawerRoot(root);\n        if (!drawerRoot.length) {\n            return;\n        }\n        if (!backdropPromise) {\n            backdropPromise = Templates.render('core/modal_backdrop', {})\n                .then(html => new ModalBackdrop(html));\n        }\n        const backdropWithAdjustments = backdropPromise.then(modalBackdrop => {\n            const messageDrawerZIndex = window.getComputedStyle(drawerRoot[0]).zIndex;\n            if (messageDrawerZIndex) {\n                modalBackdrop.setZIndex(messageDrawerZIndex - 1);\n            }\n            modalBackdrop.getAttachmentPoint().get(0).addEventListener('click', e => {\n                PubSub.publish(Events.HIDE, {});\n                e.preventDefault();\n            });\n            return modalBackdrop;\n        });\n        if (hasFocus) {\n            FocusLock.trapFocus(root[0]);\n            // eslint-disable-next-line promise/catch-or-return\n            backdropWithAdjustments.then(modalBackdrop => {\n                if (modalBackdrop) {\n                    modalBackdrop.show();\n                    const pageWrapper = document.getElementById('page');\n                    pageWrapper.style.overflow = 'hidden';\n                }\n                return modalBackdrop;\n            });\n        } else {\n            FocusLock.untrapFocus();\n            // eslint-disable-next-line promise/catch-or-return\n            backdropWithAdjustments.then(modalBackdrop => {\n                if (modalBackdrop) {\n                    modalBackdrop.hide();\n                    const pageWrapper = document.getElementById('page');\n                    pageWrapper.style.overflow = 'visible';\n                }\n                return modalBackdrop;\n            });\n            // Return the focus to the button that opened the drawer.\n            openButton?.focus();\n        }\n    };\n    /**\n     * Show the message drawer.\n     *\n     * @param {string} namespace The route namespace.\n     * @param {Object} root The message drawer container.\n     */\n    var show = function(namespace, root) {\n        if (!root.attr('data-shown')) {\n            Router.go(namespace, Routes.VIEW_OVERVIEW);\n            root.attr('data-shown', true);\n        }\n\n        var drawerRoot = Drawer.getDrawerRoot(root);\n        if (drawerRoot.length) {\n            setFocus(root, true);\n            Drawer.show(drawerRoot);\n        }\n    };\n\n    /**\n     * Hide the message drawer.\n     *\n     * @param {Object} root The message drawer container.\n     */\n    var hide = function(root) {\n        var drawerRoot = Drawer.getDrawerRoot(root);\n        if (drawerRoot.length) {\n            setFocus(root, false);\n            Drawer.hide(drawerRoot);\n        }\n    };\n\n    /**\n     * Check if the drawer is visible.\n     *\n     * @param {Object} root The message drawer container.\n     * @return {boolean}\n     */\n    var isVisible = function(root) {\n        var drawerRoot = Drawer.getDrawerRoot(root);\n        if (drawerRoot.length) {\n            return Drawer.isVisible(drawerRoot);\n        }\n        return true;\n    };\n\n    /**\n     * Set Jump from button\n     *\n     * @param {String} buttonid The originating button id\n     */\n    var setJumpFrom = function(buttonid) {\n        $(SELECTORS.DRAWER).attr('data-origin', buttonid);\n    };\n\n    /**\n     * Listen to and handle events for routing, showing and hiding the message drawer.\n     *\n     * @param {string} namespace The route namespace.\n     * @param {Object} root The message drawer container.\n     * @param {bool} alwaysVisible Is this messaging app always shown?\n     */\n    var registerEventListeners = function(namespace, root, alwaysVisible) {\n        CustomEvents.define(root, [CustomEvents.events.activate]);\n        var paramRegex = /^data-route-param-?(\\d*)$/;\n\n        root.on(CustomEvents.events.activate, SELECTORS.ROUTES, function(e, data) {\n            var element = $(e.target).closest(SELECTORS.ROUTES);\n            var route = element.attr('data-route');\n            var attributes = [];\n\n            for (var i = 0; i < element[0].attributes.length; i++) {\n                attributes.push(element[0].attributes[i]);\n            }\n\n            var paramAttributes = attributes.filter(function(attribute) {\n                var name = attribute.nodeName;\n                var match = paramRegex.test(name);\n                return match;\n            });\n            paramAttributes.sort(function(a, b) {\n                var aParts = paramRegex.exec(a.nodeName);\n                var bParts = paramRegex.exec(b.nodeName);\n                var aIndex = aParts.length > 1 ? aParts[1] : 0;\n                var bIndex = bParts.length > 1 ? bParts[1] : 0;\n\n                if (aIndex < bIndex) {\n                    return -1;\n                } else if (bIndex < aIndex) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n\n            var params = paramAttributes.map(function(attribute) {\n                return attribute.nodeValue;\n            });\n\n            var routeParams = [namespace, route].concat(params);\n\n            Router.go.apply(null, routeParams);\n\n            data.originalEvent.preventDefault();\n        });\n\n        root.on(CustomEvents.events.activate, SELECTORS.ROUTES_BACK, function(e, data) {\n            Router.back(namespace);\n\n            data.originalEvent.preventDefault();\n        });\n\n        // These are theme-specific to help us fix random behat fails.\n        // These events target those events defined in BS3 and BS4 onwards.\n        root.on('hide.bs.collapse', '.collapse', function(e) {\n            var pendingPromise = new Pending();\n            $(e.target).one('hidden.bs.collapse', function() {\n                pendingPromise.resolve();\n            });\n        });\n\n        root.on('show.bs.collapse', '.collapse', function(e) {\n            var pendingPromise = new Pending();\n            $(e.target).one('shown.bs.collapse', function() {\n                pendingPromise.resolve();\n            });\n        });\n        if (!alwaysVisible) {\n            PubSub.subscribe(Events.SHOW, function() {\n                show(namespace, root);\n            });\n\n            PubSub.subscribe(Events.HIDE, function() {\n                hide(root);\n            });\n\n            PubSub.subscribe(Events.TOGGLE_VISIBILITY, function(buttonid) {\n                const buttonElement = document.getElementById(buttonid);\n                if (isVisible(root)) {\n                    hide(root);\n                    buttonElement?.setAttribute('aria-expanded', false);\n                } else {\n                    openButton = buttonElement;\n                    show(namespace, root);\n                    buttonElement?.setAttribute('aria-expanded', true);\n                    setJumpFrom(buttonid);\n                }\n            });\n        }\n\n        PubSub.subscribe(Events.SHOW_CONVERSATION, function(args) {\n            setJumpFrom(args.buttonid);\n            show(namespace, root);\n            Router.go(namespace, Routes.VIEW_CONVERSATION, args.conversationid);\n        });\n\n        var closebutton = root.find(SELECTORS.CLOSE_BUTTON);\n        closebutton.on(CustomEvents.events.activate, function(e, data) {\n            data.originalEvent.preventDefault();\n\n            var button = $(SELECTORS.DRAWER).attr('data-origin');\n            if (button) {\n                $('#' + button).focus();\n            }\n            PubSub.publish(Events.TOGGLE_VISIBILITY, button);\n            setFocus(root, false);\n        });\n\n        PubSub.subscribe(Events.CREATE_CONVERSATION_WITH_USER, function(args) {\n            setJumpFrom(args.buttonid);\n            show(namespace, root);\n            Router.go(namespace, Routes.VIEW_CONVERSATION, null, 'create', args.userid);\n        });\n\n        PubSub.subscribe(Events.SHOW_SETTINGS, function() {\n            show(namespace, root);\n            Router.go(namespace, Routes.VIEW_SETTINGS);\n        });\n\n        PubSub.subscribe(Events.PREFERENCES_UPDATED, function(preferences) {\n            var filteredPreferences = preferences.filter(function(preference) {\n                return preference.type == 'message_entertosend';\n            });\n            var enterToSendPreference = filteredPreferences.length ? filteredPreferences[0] : null;\n\n            if (enterToSendPreference) {\n                var viewConversationFooter = root.find(SELECTORS.FOOTER_CONTAINER).find(SELECTORS.VIEW_CONVERSATION);\n                viewConversationFooter.attr('data-enter-to-send', enterToSendPreference.value);\n            }\n        });\n    };\n\n    /**\n     * Initialise the message drawer.\n     *\n     * @param {Object} root The message drawer container.\n     * @param {String} uniqueId Unique identifier for the Routes\n     * @param {bool} alwaysVisible Should we show the app now, or wait for the user?\n     * @param {Object} route\n     */\n    var init = function(root, uniqueId, alwaysVisible, route) {\n        root = $(root);\n        createRoutes(uniqueId, root);\n        registerEventListeners(uniqueId, root, alwaysVisible);\n\n        if (alwaysVisible) {\n            show(uniqueId, root);\n\n            if (route) {\n                var routeParams = route.params || [];\n                routeParams = [uniqueId, route.path].concat(routeParams);\n                Router.go.apply(null, routeParams);\n            }\n        }\n\n        // Mark the drawer as ready.\n        Helper.markDrawerReady();\n    };\n\n    return {\n        init: init,\n    };\n});\n"],"names":["define","$","CustomEvents","PubSub","ViewContact","ViewContacts","ViewConversation","ViewGroupInfo","ViewOverview","ViewSearch","ViewSettings","Router","Routes","Events","Helper","Pending","Drawer","FocusLock","ModalBackdrop","Templates","SELECTORS","routes","VIEW_CONTACT","show","description","VIEW_CONTACTS","VIEW_CONVERSATION","VIEW_GROUP_INFO","VIEW_OVERVIEW","VIEW_SEARCH","VIEW_SETTINGS","createRoutes","namespace","root","forEach","route","add","selector","header","find","length","body","footer","getParametersForRoute","openButton","backdropPromise","setFocus","hasFocus","drawerRoot","getDrawerRoot","render","then","html","backdropWithAdjustments","modalBackdrop","messageDrawerZIndex","window","getComputedStyle","zIndex","setZIndex","getAttachmentPoint","get","addEventListener","e","publish","HIDE","preventDefault","trapFocus","document","getElementById","style","overflow","untrapFocus","hide","focus","attr","go","setJumpFrom","buttonid","registerEventListeners","alwaysVisible","events","activate","paramRegex","on","data","element","target","closest","attributes","i","push","paramAttributes","filter","attribute","name","nodeName","test","sort","a","b","aParts","exec","bParts","aIndex","bIndex","params","map","nodeValue","routeParams","concat","apply","originalEvent","back","pendingPromise","one","resolve","subscribe","SHOW","TOGGLE_VISIBILITY","buttonElement","isVisible","setAttribute","SHOW_CONVERSATION","args","conversationid","button","CREATE_CONVERSATION_WITH_USER","userid","SHOW_SETTINGS","PREFERENCES_UPDATED","preferences","filteredPreferences","preference","type","enterToSendPreference","value","init","uniqueId","path","markDrawerReady"],"mappings":"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"}